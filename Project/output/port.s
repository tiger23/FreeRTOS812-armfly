; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--debug -c -S -o.\output\port.s --depend=.\output\port.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\CORTEX_STM32F103_Keil -I..\bsp -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\STM32F10x_StdPeriph_Driver -I..\FreeRTOS\Source\include -I..\FreeRTOS\Source\portable\MemMang -I..\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\FreeRTOS\Common\include -I..\app -I..\app\Inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\Include -I..\FreeRTOS\Source\CMSIS_RTOS -If:\Keil_v5\ARM\RV31\INC -If:\Keil_v5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include -If:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F103xE --omf_browse=.\output\port.crf ..\FreeRTOS\Source\portable\RVDS\ARM_CM3\port.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

prvTaskExitError PROC
        LDR      r0,|L0.484|
        LDR      r0,[r0,#0]  ; uxCriticalNesting
        ADDS     r0,r0,#1
        CBNZ     r0,|L0.12|
        MOVS     r0,#1
        B        |L0.14|
|L0.12|
        MOVS     r0,#0
|L0.14|
        CBNZ     r0,|L0.24|
        BL       ulPortSetInterruptMask
        NOP      
|L0.22|
        B        |L0.22|
|L0.24|
        BL       ulPortSetInterruptMask
        NOP      
|L0.30|
        B        |L0.30|
        ENDP

pxPortInitialiseStack PROC
        SUBS     r0,r0,#4
        MOV      r3,#0x1000000
        STR      r3,[r0,#0]
        SUBS     r0,r0,#4
        STR      r1,[r0,#0]
        SUBS     r0,r0,#4
        LDR      r3,|L0.488|
        STR      r3,[r0,#0]
        SUBS     r0,r0,#0x14
        STR      r2,[r0,#0]
        SUBS     r0,r0,#0x20
        BX       lr
        ENDP

vPortSetupTimerInterrupt PROC
        LDR      r0,|L0.492|
        LDR      r0,[r0,#0]  ; SystemCoreClock
        MOV      r1,#0x3e8
        UDIV     r0,r0,r1
        SUBS     r0,r0,#1
        MOV      r1,#0xe000e000
        STR      r0,[r1,#0x14]
        MOVS     r0,#7
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

xPortStartScheduler PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L0.496|
        MOV      r1,r0
        LDRB     r1,[r1,#0]
        STR      r1,[sp,#4]
        MOVS     r1,#0xff
        MOV      r2,r0
        STRB     r1,[r2,#0]
        MOV      r1,r0
        LDRB     r1,[r1,#0]
        STR      r1,[sp,#0]
        LDRB     r1,[sp,#0]
        AND      r1,r1,#0x50
        LDR      r2,|L0.500|
        STRB     r1,[r2,#0]
        MOVS     r1,#7
        LDR      r2,|L0.504|
        STR      r1,[r2,#0]  ; ulMaxPRIGROUPValue
        B        |L0.146|
|L0.126|
        LDR      r1,|L0.504|
        LDR      r1,[r1,#0]  ; ulMaxPRIGROUPValue
        SUBS     r1,r1,#1
        LDR      r2,|L0.504|
        STR      r1,[r2,#0]  ; ulMaxPRIGROUPValue
        LDRB     r1,[sp,#0]
        LSLS     r1,r1,#25
        LSRS     r1,r1,#24
        STR      r1,[sp,#0]
|L0.146|
        LDRB     r1,[sp,#0]
        AND      r1,r1,#0x80
        CMP      r1,#0x80
        BEQ      |L0.126|
        LDR      r1,|L0.504|
        LDR      r1,[r1,#0]  ; ulMaxPRIGROUPValue
        LSLS     r1,r1,#8
        LDR      r2,|L0.504|
        STR      r1,[r2,#0]  ; ulMaxPRIGROUPValue
        MOV      r1,r2
        LDRH     r1,[r1,#0]  ; ulMaxPRIGROUPValue
        AND      r1,r1,#0x700
        STR      r1,[r2,#0]  ; ulMaxPRIGROUPValue
        LDR      r2,|L0.496|
        LDR      r1,[sp,#4]
        STRB     r1,[r2,#0]
        LDR      r0,|L0.508|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0xf00000
        LDR      r1,|L0.508|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0xf0000000
        STR      r0,[r1,#0]
        BL       vPortSetupTimerInterrupt
        MOVS     r0,#0
        LDR      r1,|L0.484|
        STR      r0,[r1,#0]  ; uxCriticalNesting
        BL       __asm___6_port_c_39a90d8d__prvStartFirstTask
        MOVS     r0,#0
        POP      {r2-r4,pc}
        ENDP

vPortEndScheduler PROC
        PUSH     {r4,lr}
        LDR      r0,|L0.484|
        LDR      r0,[r0,#0]  ; uxCriticalNesting
        CMP      r0,#0x3e8
        BNE      |L0.240|
        MOVS     r0,#1
        B        |L0.242|
|L0.240|
        MOVS     r0,#0
|L0.242|
        CBNZ     r0,|L0.252|
        BL       ulPortSetInterruptMask
        NOP      
|L0.250|
        B        |L0.250|
|L0.252|
        POP      {r4,pc}
        ENDP

vPortYield PROC
        MOV      r0,#0x10000000
        LDR      r1,|L0.508|
        SUBS     r1,r1,#0x1c
        STR      r0,[r1,#0]
        DSB      
        ISB      
        BX       lr
        ENDP

vPortEnterCritical PROC
        PUSH     {r4,lr}
        BL       ulPortSetInterruptMask
        LDR      r0,|L0.484|
        LDR      r0,[r0,#0]  ; uxCriticalNesting
        ADDS     r0,r0,#1
        LDR      r1,|L0.484|
        STR      r0,[r1,#0]  ; uxCriticalNesting
        DSB      
        ISB      
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; uxCriticalNesting
        CMP      r0,#1
        BNE      |L0.332|
        LDR      r0,|L0.508|
        SUBS     r0,r0,#0x1c
        LDR      r0,[r0,#0]
        UXTB     r0,r0
        CBNZ     r0,|L0.320|
        MOVS     r0,#1
        B        |L0.322|
|L0.320|
        MOVS     r0,#0
|L0.322|
        CBNZ     r0,|L0.332|
        BL       ulPortSetInterruptMask
        NOP      
|L0.330|
        B        |L0.330|
|L0.332|
        POP      {r4,pc}
        ENDP

vPortExitCritical PROC
        PUSH     {r4,lr}
        LDR      r0,|L0.484|
        LDR      r0,[r0,#0]  ; uxCriticalNesting
        CBNZ     r0,|L0.350|
        BL       ulPortSetInterruptMask
        NOP      
|L0.348|
        B        |L0.348|
|L0.350|
        LDR      r0,|L0.484|
        LDR      r0,[r0,#0]  ; uxCriticalNesting
        SUBS     r0,r0,#1
        LDR      r1,|L0.484|
        STR      r0,[r1,#0]  ; uxCriticalNesting
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; uxCriticalNesting
        CBNZ     r0,|L0.372|
        MOVS     r0,#0
        BL       vPortClearInterruptMask
|L0.372|
        POP      {r4,pc}
        ENDP

xPortSysTickHandler PROC
        PUSH     {r4,lr}
        BL       ulPortSetInterruptMask
        BL       xTaskIncrementTick
        CBZ      r0,|L0.396|
        MOV      r0,#0x10000000
        LDR      r1,|L0.508|
        SUBS     r1,r1,#0x1c
        STR      r0,[r1,#0]
|L0.396|
        MOVS     r0,#0
        BL       vPortClearInterruptMask
        POP      {r4,pc}
        ENDP

vPortValidateInterruptPriority PROC
        PUSH     {r4-r6,lr}
        BL       vPortGetIPSR
        MOV      r5,r0
        CMP      r5,#0x10
        BCC      |L0.448|
        ADD      r0,r5,#0xe000e000
        LDRB     r4,[r0,#0x3f0]
        LDR      r0,|L0.500|
        LDRB     r0,[r0,#0]  ; ucMaxSysCallPriority
        CMP      r4,r0
        BLT      |L0.436|
        MOVS     r0,#1
        B        |L0.438|
|L0.436|
        MOVS     r0,#0
|L0.438|
        CBNZ     r0,|L0.448|
        BL       ulPortSetInterruptMask
        NOP      
|L0.446|
        B        |L0.446|
|L0.448|
        LDR      r0,|L0.508|
        SUBS     r0,r0,#0x14
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x700
        LDR      r1,|L0.504|
        LDR      r1,[r1,#0]  ; ulMaxPRIGROUPValue
        CMP      r0,r1
        BHI      |L0.470|
        MOVS     r0,#1
        B        |L0.472|
|L0.470|
        MOVS     r0,#0
|L0.472|
        CBNZ     r0,|L0.482|
        BL       ulPortSetInterruptMask
        NOP      
|L0.480|
        B        |L0.480|
|L0.482|
        POP      {r4-r6,pc}
        ENDP

|L0.484|
        DCD      uxCriticalNesting
|L0.488|
        DCD      prvTaskExitError
|L0.492|
        DCD      SystemCoreClock
|L0.496|
        DCD      0xe000e400
|L0.500|
        DCD      ucMaxSysCallPriority
|L0.504|
        DCD      ulMaxPRIGROUPValue
|L0.508|
        DCD      0xe000ed20

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

uxCriticalNesting
        DCD      0xaaaaaaaa
ucMaxSysCallPriority
        DCB      0x00,0x00,0x00,0x00
ulMaxPRIGROUPValue
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\FreeRTOS\\Source\\portable\\RVDS\\ARM_CM3\\port.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |SVC_Handler|
#line 245
|SVC_Handler| PROC
#line 246

 PRESERVE8

 ldr r3, =pxCurrentTCB  
 ldr r1, [r3]  
 ldr r0, [r1]  
 ldmia r0!, {r4-r11}  
 msr psp, r0  
 isb
 mov r0, #0
 msr basepri, r0
 orr r14, #0xd
 bx r14
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_port_c_39a90d8d__prvStartFirstTask|
#line 262
|__asm___6_port_c_39a90d8d__prvStartFirstTask| PROC
#line 263

 PRESERVE8

 
 ldr r0, =0xE000ED08
 ldr r0, [r0]
 ldr r0, [r0]
 
 msr msp, r0
 
 cpsie i
 cpsie f
 dsb
 isb
 
 svc 0
 nop
 nop
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |PendSV_Handler|
#line 402
|PendSV_Handler| PROC
#line 403


 extern pxCurrentTCB
 extern vTaskSwitchContext

 PRESERVE8

 mrs r0, psp
 isb

 ldr r3, =pxCurrentTCB  
 ldr r2, [r3]

 stmdb r0!, {r4-r11}  
 str r0, [r2]  

 stmdb sp!, {r3, r14}
 mov r0, #( 5 << (8 - 4) )
 msr basepri, r0
 bl vTaskSwitchContext
 mov r0, #0
 msr basepri, r0
 ldmia sp!, {r3, r14}

 ldr r1, [r3]
 ldr r0, [r1]  
 ldmia r0!, {r4-r11}  
 msr psp, r0
 isb
 bx r14
 nop
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |ulPortSetInterruptMask|
#line 635
|ulPortSetInterruptMask| PROC
#line 636

 PRESERVE8

 mrs r0, basepri
 mov r1, #( 5 << (8 - 4) )
 msr basepri, r1
 bx r14
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |vPortClearInterruptMask|
#line 646
|vPortClearInterruptMask| PROC
#line 647

 PRESERVE8

 msr basepri, r0
 bx r14
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |vPortGetIPSR|
#line 655
|vPortGetIPSR| PROC
#line 656

 PRESERVE8

 mrs r0, ipsr
 bx r14
	ENDP

;*** End   embedded assembler ***

        EXPORT pxPortInitialiseStack [CODE]
        EXPORT vPortSetupTimerInterrupt [CODE]
        EXPORT xPortStartScheduler [CODE]
        EXPORT vPortEndScheduler [CODE]
        EXPORT vPortYield [CODE]
        EXPORT vPortEnterCritical [CODE]
        EXPORT vPortExitCritical [CODE]
        EXPORT xPortSysTickHandler [CODE]
        EXPORT vPortValidateInterruptPriority [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SystemCoreClock [DATA]
        IMPORT xTaskIncrementTick [CODE]

        KEEP prvTaskExitError
        KEEP uxCriticalNesting
        KEEP ucMaxSysCallPriority
        KEEP ulMaxPRIGROUPValue

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
